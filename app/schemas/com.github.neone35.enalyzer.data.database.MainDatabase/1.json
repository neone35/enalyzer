{
  "formatVersion": 1,
  "database": {
    "version": 1,
    "identityHash": "caf53460935eef42e0dab9934ceff9f7",
    "entities": [
      {
        "tableName": "additives",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`ecode` TEXT NOT NULL, `code` INTEGER NOT NULL, `wiki_data_qcode` TEXT, `wiki_edit_date` TEXT, `pubchem_ID` INTEGER NOT NULL, `name` TEXT, `description` TEXT, `category` TEXT, `formula` TEXT, `imageURL` TEXT, `known_as` TEXT, `ghs_pictogram_urls` TEXT, `hazards` TEXT, PRIMARY KEY(`ecode`))",
        "fields": [
          {
            "fieldPath": "ecode",
            "columnName": "ecode",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "code",
            "columnName": "code",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "wikiDataQCode",
            "columnName": "wiki_data_qcode",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "wikiEditDate",
            "columnName": "wiki_edit_date",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "pubchemID",
            "columnName": "pubchem_ID",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "category",
            "columnName": "category",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "formula",
            "columnName": "formula",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "imageURL",
            "columnName": "imageURL",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "knownAs",
            "columnName": "known_as",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "ghsPictogramURL",
            "columnName": "ghs_pictogram_urls",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "hazardList",
            "columnName": "hazards",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "ecode"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "scan_photos",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `file_name` TEXT, `time_millis` INTEGER NOT NULL, `e_codes` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "filePath",
            "columnName": "file_name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "timeMillis",
            "columnName": "time_millis",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ECodes",
            "columnName": "e_codes",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "code_categories",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `range` TEXT, `title` TEXT, `codes` TEXT, `e_codes` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "range",
            "columnName": "range",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "codes",
            "columnName": "codes",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "ECodes",
            "columnName": "e_codes",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "hazards",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`statement_code` TEXT NOT NULL, `statement` TEXT, PRIMARY KEY(`statement_code`))",
        "fields": [
          {
            "fieldPath": "statementCode",
            "columnName": "statement_code",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "statement",
            "columnName": "statement",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "statement_code"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      }
    ],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, \"caf53460935eef42e0dab9934ceff9f7\")"
    ]
  }
}